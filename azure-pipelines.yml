# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

jobs:
  - job: 'Build_Test'
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      matrix:
        Python35:
          python.version: '3.5'
        Python36:
          python.version: '3.6'
      maxParallel: 2

    steps:
      - task: UsePythonVersion@0
        inputs:
            versionSpec: '$(python.version)'
            architecture: 'x64'
      - bash: echo "##vso[task.prependpath]$CONDA/bin"
        displayName: Add conda to PATH
      - bash: conda create --yes --quiet --name testenv python=$(python.version)
        displayName: Create Anaconda environment
      - bash: |
            source activate testenv
            conda install --yes --quiet --name testenv pybind11
        displayName: Install Anaconda packages
      - script: |
            source activate testenv
            python -m pip install flake8
            flake8 .
        displayName: 'Run lint tests'
      - bash: |
            source activate testenv
            python --version
            python setup.py install
        displayName: Install using setup.py
      - script: |
            source activate testenv
            pip install pytest
            pip install pytest-cov
            pytest tests --doctest-modules --junitxml=junit/test-results.xml \
                --cov=com --cov-report=xml --cov-report=html
        displayName: 'Test with pytest'

  - job: 'Build_Docs'
    pool:
        vmImage: 'ubuntu-latest'
    steps:
        - script: |
            npm install gh-pages
            git config user.email "ci-build@bnl.gov"
            git config user.name "ci-build"
          displayName: Install gh-pages
        - script: |
            cd docs
            make html
            gh-pages --dist build/html
          displayName: Build and upload docs

